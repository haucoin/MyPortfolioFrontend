{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ExperienceInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Container, Box, Typography, Grid, Card, CardMedia, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme/theme';\nimport service from '../services/ExperienceService';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Experience Information\n * @Summary This component displays the professional experience information within the experience page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  block: {\n    marginBottom: theme.spacing(3),\n    textAlign: \"justify\"\n  },\n  imageBoxRoot: {\n    maxWidth: 512,\n    paddingBottom: theme.spacing(12),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up(960)]: {\n      paddingTop: theme.spacing(12),\n      paddingLeft: theme.spacing(6)\n    }\n  },\n  imageBoxRootBottom: {\n    maxWidth: 512,\n    paddingBottom: theme.spacing(8),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up(960)]: {\n      paddingTop: theme.spacing(6),\n      paddingLeft: theme.spacing(6)\n    }\n  },\n  cardRoot: {\n    position: 'relative',\n    paddingTop: '85%',\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  cardMedia: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    border: 0\n  }\n}));\nexport default function App() {\n  _s();\n\n  const classes = useStyles(); // Creating variables of experience lists to be filled be appropriate service call\n\n  const [GCUExperiences, setGCUExperiences] = React.useState([]);\n  const [GCEExperiences, setGCEExperiences] = React.useState([]);\n  const [AWSLExperiences, setASWLExperiences] = React.useState([]);\n  const [URExperiences, setURExperiences] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true); // Use useEffect method to call backend for each skill type and wait for response\n\n  useEffect(() => {\n    service.getExperiencesByCompany(\"Grand Canyon University\").then(response => {\n      setGCUExperiences(response.data);\n    });\n    service.getExperiencesByCompany(\"Grand Canyon Education\").then(response => {\n      setGCEExperiences(response.data);\n    });\n    service.getExperiencesByCompany(\"Association of Washington Student Leaders\").then(response => {\n      setASWLExperiences(response.data);\n    });\n    service.getExperiencesByCompany(\"University of Redlands\").then(response => {\n      setURExperiences(response.data);\n    });\n    setIsLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      pt: 8,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"left\",\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h2\",\n            gutterBottom: true,\n            children: \"Learn about what I've done.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"textSecondary\",\n            children: \"Listed below are the experiences where I have been able to learn and grow, and include positions that allowed me to serve as a leader in team environments.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        style: {\n          paddingBottom: 30\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.contentBox,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mt: 4,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Grand Canyon University\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  width: \"150px\",\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: GCUExperiences.map((experience, index) => {\n                  let location = \"\";\n\n                  if (index === 0) {\n                    location = /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        justifyContent: \"space-between\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: experience.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: experience.location\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 29\n                    }, this);\n                  } else {\n                    location = /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: experience.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 29\n                    }, this);\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [location, /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"overline\",\n                      children: [experience.startDate, \" - \", experience.endDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      color: \"textSecondary\",\n                      paragraph: true,\n                      className: classes.block,\n                      children: experience.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.imageBoxRoot,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.cardRoot,\n                children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                  className: classes.cardMedia,\n                  component: \"img\",\n                  src: GCUExperiences.length > 0 ? GCUExperiences[0].image : null,\n                  alt: GCUExperiences.length > 0 ? GCUExperiences[0].name : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          style: {\n            paddingTop: 30,\n            paddingBottom: 30\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 7,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.contentBox,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mt: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    children: \"Grand Canyon Education\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                    width: \"150px\",\n                    align: \"left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: GCEExperiences.map((experience, index) => {\n                    let location = \"\";\n\n                    if (index === 0) {\n                      location = /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: \"flex\",\n                          justifyContent: \"space-between\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          children: /*#__PURE__*/_jsxDEV(\"b\", {\n                            children: experience.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 168,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: experience.location\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 31\n                      }, this);\n                    } else {\n                      location = /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: experience.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 59\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 31\n                      }, this);\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [location, /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"overline\",\n                        children: [experience.startDate, \" - \", experience.endDate]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        color: \"textSecondary\",\n                        paragraph: true,\n                        className: classes.block,\n                        children: experience.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.imageBoxRoot,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.cardRoot,\n                  children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.cardMedia,\n                    component: \"img\",\n                    src: GCEExperiences.length > 0 ? GCEExperiences[0].image : null,\n                    alt: GCEExperiences.length > 0 ? GCEExperiences[0].name : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        style: {\n          paddingTop: 30\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.contentBox,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Association of Washington Student Leaders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  width: \"150px\",\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: AWSLExperiences.map((experience, index) => {\n                  let location = \"\";\n\n                  if (index === 0) {\n                    location = /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        justifyContent: \"space-between\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: experience.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: experience.location\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 29\n                    }, this);\n                  } else {\n                    location = /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: experience.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 29\n                    }, this);\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [location, /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"overline\",\n                      children: [experience.startDate, \" - \", experience.endDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      color: \"textSecondary\",\n                      paragraph: true,\n                      className: classes.block,\n                      children: experience.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.imageBoxRootBottom,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.cardRoot,\n                children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                  className: classes.cardMedia,\n                  component: \"img\",\n                  src: AWSLExperiences.length > 0 ? AWSLExperiences[0].image : null,\n                  alt: AWSLExperiences.length > 0 ? AWSLExperiences[0].name : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          style: {\n            paddingTop: 30,\n            paddingBottom: 30\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 7,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.contentBox,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mt: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    children: \"University of Redlands\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                    width: \"150px\",\n                    align: \"left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: URExperiences.map((experience, index) => {\n                    let location = \"\";\n\n                    if (index === 0) {\n                      location = /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: \"flex\",\n                          justifyContent: \"space-between\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          children: /*#__PURE__*/_jsxDEV(\"b\", {\n                            children: experience.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 268,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: experience.location\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 31\n                      }, this);\n                    } else {\n                      location = /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: experience.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 59\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 31\n                      }, this);\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [location, /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"overline\",\n                        children: [experience.startDate, \" - \", experience.endDate]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        color: \"textSecondary\",\n                        paragraph: true,\n                        className: classes.block,\n                        children: experience.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.imageBoxRoot,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.cardRoot,\n                  children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.cardMedia,\n                    component: \"img\",\n                    src: URExperiences.length > 0 ? URExperiences[0].image : null,\n                    alt: URExperiences.length > 0 ? URExperiences[0].name : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UwtNFSL2RBnZnEP/JB8P5BuXIMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/ExperienceInformation.js"],"names":["React","useEffect","Container","Box","Typography","Grid","Card","CardMedia","Paper","makeStyles","theme","service","useStyles","block","marginBottom","spacing","textAlign","imageBoxRoot","maxWidth","paddingBottom","marginLeft","marginRight","breakpoints","up","paddingTop","paddingLeft","imageBoxRootBottom","cardRoot","position","margin","overflow","cardMedia","top","left","width","height","border","App","classes","GCUExperiences","setGCUExperiences","useState","GCEExperiences","setGCEExperiences","AWSLExperiences","setASWLExperiences","URExperiences","setURExperiences","isLoading","setIsLoading","getExperiencesByCompany","then","response","data","contentBox","map","experience","index","location","display","justifyContent","name","startDate","endDate","description","length","image"],"mappings":"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","sourcesContent":["import React, { useEffect }  from 'react';\nimport { Container, Box, Typography, Grid, Card, CardMedia, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme/theme';\nimport service from '../services/ExperienceService';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Experience Information\n * @Summary This component displays the professional experience information within the experience page\n */\n\nconst useStyles = makeStyles(() => ({\n    block: {\n      marginBottom: theme.spacing(3),\n      textAlign: \"justify\"\n    },\n    imageBoxRoot: {\n      maxWidth: 512,\n      paddingBottom: theme.spacing(12),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      [theme.breakpoints.up(960)]: {\n          paddingTop: theme.spacing(12),\n          paddingLeft: theme.spacing(6),\n      }\n    },\n    imageBoxRootBottom: {\n      maxWidth: 512,\n      paddingBottom: theme.spacing(8),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      [theme.breakpoints.up(960)]: {\n          paddingTop: theme.spacing(6),\n          paddingLeft: theme.spacing(6),\n      }\n    },\n    cardRoot: {\n      position: 'relative',\n      paddingTop: '85%',\n      margin: 'auto',\n      overflow: 'hidden',\n    },\n    cardMedia: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      border: 0\n    }\n}));\n\nexport default function App() {\n\n    const classes = useStyles();\n\n    // Creating variables of experience lists to be filled be appropriate service call\n    const [GCUExperiences, setGCUExperiences] = React.useState([]);\n    const [GCEExperiences, setGCEExperiences] = React.useState([]);\n    const [AWSLExperiences, setASWLExperiences] = React.useState([]);\n    const [URExperiences, setURExperiences] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    // Use useEffect method to call backend for each skill type and wait for response\n  useEffect(() => {\n    service.getExperiencesByCompany(\"Grand Canyon University\").then(response => {\n      setGCUExperiences(response.data);\n    })\n    service.getExperiencesByCompany(\"Grand Canyon Education\").then(response => {\n      setGCEExperiences(response.data);\n    })\n    service.getExperiencesByCompany(\"Association of Washington Student Leaders\").then(response => {\n      setASWLExperiences(response.data);\n    })\n    service.getExperiencesByCompany(\"University of Redlands\").then(response => {\n      setURExperiences(response.data);\n    })\n    setIsLoading(false);\n  }, []);\n\n\n    return (\n\n    <section>\n      {/* Check to see if REST call has finished before trying to render */}\n      { !isLoading && (\n        <Box pt={8} >\n          <Container maxWidth=\"md\">\n            <Box textAlign=\"left\" mb={2}>\n              <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>Learn about what I've done.</Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                Listed below are the experiences where I have been able to learn and grow, and include positions that allowed me to serve as a leader in team environments.\n              </Typography>\n            </Box>\n          </Container>\n          {/* Section displaying all GCU experience information */}\n          <Container maxWidth=\"md\" style={{paddingBottom: 30}}>\n            <Grid container>\n              <Grid item xs={12} md={7}>\n                <Box className={classes.contentBox}>\n                  <Box mt={4}>\n                    <Typography variant=\"h5\">Grand Canyon University</Typography>\n                    <hr width=\"150px\" align=\"left\" />\n                    <br/>\n                  </Box>\n                  <Box>\n                    {\n                      GCUExperiences.map((experience, index) => {\n\n                        let location = \"\";\n\n                        if(index === 0) {\n                          location = \n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">{experience.location}</Typography>\n                          </div>\n                        }\n                        else {\n                          location = \n                            <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                        }\n\n                        return (\n                          <div>\n                            {location}\n                            <Typography variant=\"overline\">{experience.startDate} - {experience.endDate}</Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" paragraph={true} className={classes.block}>{experience.description}</Typography>       \n                          </div>\n                        )\n                      })\n                    }\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={5}>\n                <Box className={classes.imageBoxRoot}>\n                  <Card className={classes.cardRoot}>\n                    <CardMedia className={classes.cardMedia} component=\"img\" src={GCUExperiences.length > 0 ? GCUExperiences[0].image : null} alt={GCUExperiences.length > 0 ? GCUExperiences[0].name : null}/>\n                  </Card>\n                </Box>\n              </Grid>\n            </Grid>\n          </Container>\n\n          <Paper elevation={3}>\n            <Container maxWidth=\"md\" style={{paddingTop: 30, paddingBottom: 30}}>\n              <Grid container>\n                <Grid item xs={12} md={7}>\n                  <Box className={classes.contentBox}>\n                    <Box mt={2}>\n                      <Typography variant=\"h5\">Grand Canyon Education</Typography>\n                      <hr width=\"150px\" align=\"left\" />\n                      <br/>\n                    </Box>\n                    <Box>\n                      {\n                        GCEExperiences.map((experience, index) => {\n\n                          let location = \"\";\n\n                          if(index === 0) {\n                            location = \n                              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                              <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                              <Typography variant=\"body2\" color=\"textSecondary\">{experience.location}</Typography>\n                            </div>\n                          }\n                          else {\n                            location = \n                              <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                          }\n\n                          return (\n                            <div>\n                              {location}\n                              <Typography variant=\"overline\">{experience.startDate} - {experience.endDate}</Typography>\n                              <Typography variant=\"body1\" color=\"textSecondary\" paragraph={true} className={classes.block}>{experience.description}</Typography>       \n                            </div>\n                          )\n                        })\n                      }\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={5}>\n                  <Box className={classes.imageBoxRoot}>\n                    <Card className={classes.cardRoot}>\n                      <CardMedia className={classes.cardMedia} component=\"img\" src={GCEExperiences.length > 0 ? GCEExperiences[0].image : null} alt={GCEExperiences.length > 0 ? GCEExperiences[0].name : null}/>\n                    </Card>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Container>\n          </Paper>\n\n          <Container maxWidth=\"md\" style={{paddingTop: 30}}>\n            <Grid container>\n              <Grid item xs={12} md={7}>\n                <Box className={classes.contentBox}>\n                  <Box mt={2}>\n                    <Typography variant=\"h5\">Association of Washington Student Leaders</Typography>\n                    <hr width=\"150px\" align=\"left\" />\n                    <br/>\n                  </Box>\n                  <Box>\n                    {\n                      AWSLExperiences.map((experience, index) => {\n\n                        let location = \"\";\n\n                        if(index === 0) {\n                          location = \n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">{experience.location}</Typography>\n                          </div>\n                        }\n                        else {\n                          location = \n                            <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                        }\n\n                        return (\n                          <div>\n                            {location}\n                            <Typography variant=\"overline\">{experience.startDate} - {experience.endDate}</Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" paragraph={true} className={classes.block}>{experience.description}</Typography>       \n                          </div>\n                        )\n                      })\n                    }\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={5}>\n                <Box className={classes.imageBoxRootBottom}>\n                  <Card className={classes.cardRoot}>\n                    <CardMedia className={classes.cardMedia} component=\"img\" src={AWSLExperiences.length > 0 ? AWSLExperiences[0].image : null} alt={AWSLExperiences.length > 0 ? AWSLExperiences[0].name : null}/>\n                  </Card>\n                </Box>\n              </Grid>\n            </Grid>\n          </Container>\n\n          <Paper elevation={3}>\n            <Container maxWidth=\"md\" style={{paddingTop: 30, paddingBottom: 30}}>\n              <Grid container>\n                <Grid item xs={12} md={7}>\n                  <Box className={classes.contentBox}>\n                    <Box mt={2}>\n                      <Typography variant=\"h5\">University of Redlands</Typography>\n                      <hr width=\"150px\" align=\"left\" />\n                      <br/>\n                    </Box>\n                    <Box>\n                    {\n                        URExperiences.map((experience, index) => {\n\n                          let location = \"\";\n\n                          if(index === 0) {\n                            location = \n                              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                              <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                              <Typography variant=\"body2\" color=\"textSecondary\">{experience.location}</Typography>\n                            </div>\n                          }\n                          else {\n                            location = \n                              <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                          }\n\n                          return (\n                            <div>\n                              {location}\n                              <Typography variant=\"overline\">{experience.startDate} - {experience.endDate}</Typography>\n                              <Typography variant=\"body1\" color=\"textSecondary\" paragraph={true} className={classes.block}>{experience.description}</Typography>       \n                            </div>\n                          )\n                        })\n                      }\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={5}>\n                  <Box className={classes.imageBoxRoot}>\n                    <Card className={classes.cardRoot}>\n                      <CardMedia className={classes.cardMedia} component=\"img\" src={URExperiences.length > 0 ? URExperiences[0].image : null} alt={URExperiences.length > 0 ? URExperiences[0].name : null}/>\n                    </Card>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Container>\n          </Paper>\n\n        </Box>\n      )\n      }\n    </section>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}