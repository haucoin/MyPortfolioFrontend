{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/IntroductionProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Container, Grid, Card, CardActionArea, CardMedia, CardHeader, Paper } from '@material-ui/core';\nimport service from '../services/ProjectService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Introduction Projects\n * @Summary This component displays the introduction to projects that is shown on the home page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  tabs: {\n    minWidth: 50,\n    ['@media (min-width:600px)']: {\n      // eslint-disable-line no-useless-computed-key\n      minWidth: 50\n    }\n  }\n}));\nexport default function App() {\n  _s();\n\n  const classes = useStyles(); // Creating variable of project list to be filled be appropriate service call\n\n  const [projects, setProjects] = React.useState([]); // Use useEffect method to call backend to get the projects and wait for response\n\n  useEffect(() => {\n    service.getProjects().then(response => {\n      setProjects(response.data);\n    });\n  }, []); // Iterate through an array of projects and turn it into its own array based on technology\n\n  function getProjectOfLanguage(language) {\n    let projectsByLanguage = [];\n    projects.map((project, index) => project.languages.includes(language) ? projectsByLanguage[index] = project : null);\n    return projectsByLanguage;\n  } // Set array of projects based on language by calling method\n\n\n  let javaProjects = getProjectOfLanguage(\"Java\");\n  let cProjects = getProjectOfLanguage(\"C#\");\n  let phpProjects = getProjectOfLanguage(\"PHP\");\n  let javascriptProjects = getProjectOfLanguage(\"JavaScript\");\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        pt: 8,\n        pb: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"center\",\n          style: {\n            paddingBottom: \"25px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            width: \"100px\",\n            align: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: projects.map((project, id) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: '/project',\n                      state: {\n                        projectId: project._id\n                      }\n                    },\n                    style: {\n                      textDecoration: 'none',\n                      color: 'black'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                        component: \"img\",\n                        className: classes.media,\n                        image: project.coverImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n                        style: {\n                          height: 40\n                        },\n                        subheader: project.name,\n                        sub: true,\n                        titleTypographyProps: {\n                          gutterBottom: false\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 49\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"SLTPTDG2OM/zl0k1BtXCOzlDuu4=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/IntroductionProjects.js"],"names":["React","useEffect","AppBar","Tabs","Tab","Typography","Box","Container","Grid","Card","CardActionArea","CardMedia","CardHeader","Paper","service","theme","makeStyles","Link","PropTypes","SwipeableViews","useStyles","root","backgroundColor","palette","background","paper","tabs","minWidth","App","classes","projects","setProjects","useState","getProjects","then","response","data","getProjectOfLanguage","language","projectsByLanguage","map","project","index","languages","includes","javaProjects","cProjects","phpProjects","javascriptProjects","paddingBottom","id","pathname","state","projectId","_id","textDecoration","color","media","coverImage","height","name","gutterBottom"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Container, Grid, Card, CardActionArea, CardMedia, CardHeader, Paper } from '@material-ui/core';\nimport service from '../services/ProjectService';\nimport theme from '../theme/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Introduction Projects\n * @Summary This component displays the introduction to projects that is shown on the home page\n */\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    tabs: {\n        minWidth: 50,\n        ['@media (min-width:600px)']: { // eslint-disable-line no-useless-computed-key\n            minWidth: 50\n        }\n    },\n}));\n\nexport default function App() {\n\n    const classes = useStyles();\n\n    // Creating variable of project list to be filled be appropriate service call\n    const [projects, setProjects] = React.useState([]);\n\n    // Use useEffect method to call backend to get the projects and wait for response\n    useEffect(() => {\n        service.getProjects().then(response => {\n            setProjects(response.data);\n        })\n    }, []);\n\n    // Iterate through an array of projects and turn it into its own array based on technology\n    function getProjectOfLanguage(language) {\n        let projectsByLanguage = [];\n\n        projects.map((project, index) => (\n            \n            project.languages.includes(language) ? projectsByLanguage[index] = project : null\n        ))\n\n        return projectsByLanguage;\n    }\n\n    // Set array of projects based on language by calling method\n    let javaProjects = getProjectOfLanguage(\"Java\");\n    let cProjects = getProjectOfLanguage(\"C#\");\n    let phpProjects = getProjectOfLanguage(\"PHP\");\n    let javascriptProjects = getProjectOfLanguage(\"JavaScript\");\n\n    return (\n\n        <section>\n            <Paper>\n                <Box pt={8} pb={6}>\n                    <div align=\"center\" style={{paddingBottom: \"25px\"}}>\n                        <Typography variant=\"h5\" gutterBottom={true}>Projects</Typography>\n                        <hr width=\"100px\" align=\"center\"/>\n                    </div>\n                    <Container maxWidth=\"md\">\n                                <Box textAlign=\"center\">\n                                    <Grid container spacing={3}>\n\n                                        {projects.map((project, id) => (\n                                            <Grid item xs={12} sm={6} md={4} key={id}>\n                                                <Card>\n                                                <Link to={{ pathname: '/project', state: { projectId: project._id } }} style={{ textDecoration: 'none', color: 'black' }}>\n                                                    <CardActionArea>\n                                                        <CardMedia component=\"img\" className={classes.media} image={project.coverImage} />\n                                                        <CardHeader style={{height: 40}} subheader={project.name} sub titleTypographyProps={{ gutterBottom: false }} />\n                                                    </CardActionArea>\n                                                </Link>\n                                                </Card>\n                                            </Grid>\n                                        ))\n                                        }\n\n                                    </Grid>\n                                </Box>\n                    </Container>\n                </Box>\n            </Paper>\n        </section>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}