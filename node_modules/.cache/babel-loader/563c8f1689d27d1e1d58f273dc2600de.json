{"ast":null,"code":"var _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/IntroductionExperience.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Container, Box, Typography, Grid, Card, CardMedia, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme/theme';\nimport service from '../services/ExperienceService';\nimport { ArrowRightAlt } from '@material-ui/icons';\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Introduction Experience\n * @Summary This component displays one of my professional experiences that is shown on the home page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  block: {\n    marginBottom: theme.spacing(3),\n    textAlign: \"justify\"\n  },\n  imageBoxRoot: {\n    maxWidth: 512,\n    paddingBottom: theme.spacing(12),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up(960)]: {\n      paddingTop: theme.spacing(12),\n      paddingLeft: theme.spacing(6)\n    }\n  },\n  imageBoxRootBottom: {\n    maxWidth: 512,\n    paddingBottom: theme.spacing(8),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up(960)]: {\n      paddingTop: theme.spacing(6),\n      paddingLeft: theme.spacing(6)\n    }\n  },\n  cardRoot: {\n    position: 'relative',\n    paddingTop: '85%',\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  cardMedia: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    border: 0\n  }\n}));\nexport default function App() {\n  _s();\n\n  const classes = useStyles(); // Creating variables of experience lists to be filled be appropriate service call\n\n  const [GCUExperiences, setGCUExperiences] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true); // Use useEffect method to call backend for each skill type and wait for response\n\n  useEffect(() => {\n    service.getExperiencesByCompany(\"Grand Canyon University\").then(response => {\n      setGCUExperiences(response.data);\n    });\n    setIsLoading(false);\n  }, []);\n  console.log(\"GCU\" + GCUExperiences);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      pt: 8,\n      pb: 4,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        align: \"center\",\n        style: {\n          paddingBottom: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          width: \"100px\",\n          align: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          color: \"secondary\",\n          style: {\n            textAlign: \"justify\",\n            paddingBottom: 20\n          },\n          children: \"Throughout my time at Grand Canyon University I was able to obtain various student leadership positions that allowed me to be a part of teams that worked to improve our campus. A few of those positions are shown below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.contentBox,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Grand Canyon University\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  width: \"150px\",\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: GCUExperiences.map((experience, index) => {\n                  let location = \"\";\n\n                  if (index === 0) {\n                    location = /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        justifyContent: \"space-between\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: experience.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: experience.location\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 29\n                    }, this);\n                  } else {\n                    location = /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: experience.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 29\n                    }, this);\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [location, /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"overline\",\n                      children: [experience.startDate, \" - \", experience.endDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      color: \"textSecondary\",\n                      paragraph: true,\n                      className: classes.block,\n                      children: experience.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.imageBoxRoot,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.cardRoot,\n                children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                  className: classes.cardMedia,\n                  component: \"img\",\n                  src: GCUExperiences.length > 0 ? GCUExperiences[0].image : null,\n                  alt: GCUExperiences.length > 0 ? GCUExperiences[0].name : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\"\n            },\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              href: \"/experience\",\n              color: \"primary\",\n              endIcon: /*#__PURE__*/_jsxDEV(ArrowRightAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 69\n              }, this),\n              children: \"Learn more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jHO0UbJ93RpUxcl54dnH4X38Ceg=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/hollandaucoin/src/components/IntroductionExperience.js"],"names":["React","useEffect","Container","Box","Typography","Grid","Card","CardMedia","Button","makeStyles","theme","service","ArrowRightAlt","useStyles","block","marginBottom","spacing","textAlign","imageBoxRoot","maxWidth","paddingBottom","marginLeft","marginRight","breakpoints","up","paddingTop","paddingLeft","imageBoxRootBottom","cardRoot","position","margin","overflow","cardMedia","top","left","width","height","border","App","classes","GCUExperiences","setGCUExperiences","useState","isLoading","setIsLoading","getExperiencesByCompany","then","response","data","console","log","contentBox","map","experience","index","location","display","justifyContent","name","startDate","endDate","description","length","image"],"mappings":"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","sourcesContent":["import React, { useEffect }  from 'react';\nimport { Container, Box, Typography, Grid, Card, CardMedia, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme/theme';\nimport service from '../services/ExperienceService';\nimport { ArrowRightAlt } from '@material-ui/icons';\n\n/**\n * MyPortfolio\n * @Author Holland Aucoin\n * \n * Introduction Experience\n * @Summary This component displays one of my professional experiences that is shown on the home page\n */\n\nconst useStyles = makeStyles(() => ({\n    block: {\n      marginBottom: theme.spacing(3),\n      textAlign: \"justify\"\n    },\n    imageBoxRoot: {\n      maxWidth: 512,\n      paddingBottom: theme.spacing(12),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      [theme.breakpoints.up(960)]: {\n          paddingTop: theme.spacing(12),\n          paddingLeft: theme.spacing(6),\n      }\n    },\n    imageBoxRootBottom: {\n      maxWidth: 512,\n      paddingBottom: theme.spacing(8),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      [theme.breakpoints.up(960)]: {\n          paddingTop: theme.spacing(6),\n          paddingLeft: theme.spacing(6),\n      }\n    },\n    cardRoot: {\n      position: 'relative',\n      paddingTop: '85%',\n      margin: 'auto',\n      overflow: 'hidden',\n    },\n    cardMedia: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      border: 0\n    }\n}));\n\nexport default function App() {\n\n    const classes = useStyles();\n\n    // Creating variables of experience lists to be filled be appropriate service call\n    const [GCUExperiences, setGCUExperiences] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    // Use useEffect method to call backend for each skill type and wait for response\n  useEffect(() => {\n    service.getExperiencesByCompany(\"Grand Canyon University\").then(response => {\n      setGCUExperiences(response.data);\n    })\n    setIsLoading(false);\n  }, []);\n\n  console.log(\"GCU\" + GCUExperiences);\n\n    return (\n\n    <section>\n      {/* Check to see if REST call has finished before trying to render */}\n      { !isLoading && (\n        <Box pt={8} pb={4}>\n          <div align=\"center\" style={{paddingBottom: \"25px\"}}>\n              <Typography variant=\"h5\" gutterBottom={true}>Experience</Typography>\n              <hr width=\"100px\" align=\"center\"/>\n          </div>\n          {/* Section displaying all experience information */}\n          <Container maxWidth=\"md\">\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" color=\"secondary\" style={{textAlign: \"justify\", paddingBottom: 20}}>\n              Throughout my time at Grand Canyon University I was able to obtain various student leadership positions that allowed me \n              to be a part of teams that worked to improve our campus. A few of those positions are shown below.\n            </Typography>\n            <Grid container>\n              <Grid item xs={12} md={7}>\n                <Box className={classes.contentBox}>\n                  <Box mt={2}>\n                    <Typography variant=\"h5\">Grand Canyon University</Typography>\n                    <hr width=\"150px\" align=\"left\" />\n                    <br/>\n                  </Box>\n                  <Box>\n                    {\n                      GCUExperiences.map((experience, index) => {\n\n                        let location = \"\";\n\n                        if(index === 0) {\n                          location = \n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">{experience.location}</Typography>\n                          </div>\n                        }\n                        else {\n                          location = \n                            <Typography variant=\"body1\"><b>{experience.name}</b></Typography>\n                        }\n\n                        return (\n                          <div>\n                            {location}\n                            <Typography variant=\"overline\">{experience.startDate} - {experience.endDate}</Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" paragraph={true} className={classes.block}>{experience.description}</Typography>       \n                          </div>\n                        )\n                      })\n                    }\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={5}>\n                <Box className={classes.imageBoxRoot}>\n                  <Card className={classes.cardRoot}>\n                    <CardMedia className={classes.cardMedia} component=\"img\" src={GCUExperiences.length > 0 ? GCUExperiences[0].image : null} alt={GCUExperiences.length > 0 ? GCUExperiences[0].name : null}/>\n                  </Card>\n                </Box>\n              </Grid>\n              <div style={{width: \"100%\"}} align=\"center\">\n                <Button href=\"/experience\" color=\"primary\" endIcon={<ArrowRightAlt />}>Learn more</Button>\n              </div>\n            </Grid>\n          </Container>\n\n        </Box>\n      )\n      }\n    </section>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}